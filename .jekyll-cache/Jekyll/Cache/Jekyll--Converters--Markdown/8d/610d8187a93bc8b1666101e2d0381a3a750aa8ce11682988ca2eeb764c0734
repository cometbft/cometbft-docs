I"¼,<h1 id="docker-compose">Docker Compose</h1>

<p>With Docker Compose, you can spin up local testnets with a single command.</p>

<h2 id="requirements">Requirements</h2>

<ol>
  <li><a href="/main/introduction/install/">Install CometBFT</a></li>
  <li><a href="https://docs.docker.com/engine/installation/">Install docker</a></li>
  <li><a href="https://docs.docker.com/compose/install/">Install docker-compose</a></li>
</ol>

<h2 id="build">Build</h2>

<p>Build the <code class="language-plaintext highlighter-rouge">cometbft</code> binary and, optionally, the <code class="language-plaintext highlighter-rouge">cometbft/localnode</code>
docker image.</p>

<p>Note the binary will be mounted into the container so it can be updated without
rebuilding the image.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Build the linux binary in ./build</span>
make build-linux

<span class="c"># (optionally) Build cometbft/localnode image</span>
make build-docker-localnode
</code></pre></div></div>

<h2 id="run-a-testnet">Run a testnet</h2>

<p>To start a 4 node testnet run:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>make localnet-start
</code></pre></div></div>

<p>The nodes bind their RPC servers to ports 26657, 26660, 26662, and 26664 on the
host.</p>

<p>This file creates a 4-node network using the localnode image.</p>

<p>The nodes of the network expose their P2P and RPC endpoints to the host machine
on ports 26656-26657, 26659-26660, 26661-26662, and 26663-26664 respectively.</p>

<p>To update the binary, just rebuild it and restart the nodes:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>make build-linux
make localnet-start
</code></pre></div></div>

<h2 id="configuration">Configuration</h2>

<p>The <code class="language-plaintext highlighter-rouge">make localnet-start</code> creates files for a 4-node testnet in <code class="language-plaintext highlighter-rouge">./build</code> by
calling the <code class="language-plaintext highlighter-rouge">cometbft testnet</code> command.</p>

<p>The <code class="language-plaintext highlighter-rouge">./build</code> directory is mounted to the <code class="language-plaintext highlighter-rouge">/cometbft</code> mount point to attach
the binary and config files to the container.</p>

<p>To change the number of validators / non-validators change the <code class="language-plaintext highlighter-rouge">localnet-start</code> Makefile target <a href="../../Makefile">here</a>:</p>

<div class="language-makefile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">localnet-start</span><span class="o">:</span> <span class="nf">localnet-stop</span>
  <span class="nl">@if ! [ -f build/node0/config/genesis.json ]; then docker run --rm -v $(CURDIR)/build</span><span class="o">:</span><span class="nf">/cometbft:Z cometbft/localnode testnet --v 5 --n 3 --o . --populate-persistent-peers --starting-ip-address 192.167.10.2 ; fi</span>
  <span class="err">docker-compose</span> <span class="err">up</span>
</code></pre></div></div>

<p>The command now will generate config files for 5 validators and 3
non-validators. Along with generating new config files the docker-compose file needs to be edited.
Adding 4 more nodes is required in order to fully utilize the config files that were generated.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="na">node3</span><span class="pi">:</span> <span class="c1"># bump by 1 for every node</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">node3</span> <span class="c1"># bump by 1 for every node</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s2">"</span><span class="s">cometbft/localnode"</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">ID=3</span>
      <span class="pi">-</span> <span class="s">LOG=${LOG:-cometbft.log}</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">26663-26664:26656-26657"</span> <span class="c1"># Bump 26663-26664 by one for every node</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./build:/cometbft:Z</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="na">localnet</span><span class="pi">:</span>
        <span class="na">ipv4_address</span><span class="pi">:</span> <span class="s">192.167.10.5</span> <span class="c1"># bump the final digit by 1 for every node</span>
</code></pre></div></div>

<p>Before running it, donâ€™t forget to cleanup the old files:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Clear the build folder</span>
<span class="nb">rm</span> <span class="nt">-rf</span> ./build/node<span class="k">*</span>
</code></pre></div></div>

<h2 id="configuring-abci-containers">Configuring ABCI containers</h2>

<p>To use your own ABCI applications with 4-node setup edit the <a href="https://github.com/cometbft/cometbft/blob/v0.34.x/docker-compose.yml">docker-compose.yaml</a> file and add image to your ABCI application.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="na">abci0</span><span class="pi">:</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">abci0</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s2">"</span><span class="s">abci-image"</span>
    <span class="na">build</span><span class="pi">:</span>
      <span class="na">context</span><span class="pi">:</span> <span class="s">.</span>
      <span class="na">dockerfile</span><span class="pi">:</span> <span class="s">abci.Dockerfile</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">&lt;insert command to run your abci application&gt;</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="na">localnet</span><span class="pi">:</span>
        <span class="na">ipv4_address</span><span class="pi">:</span> <span class="s">192.167.10.6</span>

  <span class="na">abci1</span><span class="pi">:</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">abci1</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s2">"</span><span class="s">abci-image"</span>
    <span class="na">build</span><span class="pi">:</span>
      <span class="na">context</span><span class="pi">:</span> <span class="s">.</span>
      <span class="na">dockerfile</span><span class="pi">:</span> <span class="s">abci.Dockerfile</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">&lt;insert command to run your abci application&gt;</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="na">localnet</span><span class="pi">:</span>
        <span class="na">ipv4_address</span><span class="pi">:</span> <span class="s">192.167.10.7</span>

  <span class="na">abci2</span><span class="pi">:</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">abci2</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s2">"</span><span class="s">abci-image"</span>
    <span class="na">build</span><span class="pi">:</span>
      <span class="na">context</span><span class="pi">:</span> <span class="s">.</span>
      <span class="na">dockerfile</span><span class="pi">:</span> <span class="s">abci.Dockerfile</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">&lt;insert command to run your abci application&gt;</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="na">localnet</span><span class="pi">:</span>
        <span class="na">ipv4_address</span><span class="pi">:</span> <span class="s">192.167.10.8</span>

  <span class="na">abci3</span><span class="pi">:</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">abci3</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s2">"</span><span class="s">abci-image"</span>
    <span class="na">build</span><span class="pi">:</span>
      <span class="na">context</span><span class="pi">:</span> <span class="s">.</span>
      <span class="na">dockerfile</span><span class="pi">:</span> <span class="s">abci.Dockerfile</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">&lt;insert command to run your abci application&gt;</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="na">localnet</span><span class="pi">:</span>
        <span class="na">ipv4_address</span><span class="pi">:</span> <span class="s">192.167.10.9</span>

</code></pre></div></div>

<p>Override the <a href="https://github.com/cometbft/cometbft/blob/v0.34.x/networks/local/localnode/Dockerfile#L12">command</a> in each node to connect to itâ€™s ABCI.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="na">node0</span><span class="pi">:</span>
    <span class="na">container_name</span><span class="pi">:</span> <span class="s">node0</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s2">"</span><span class="s">cometbft/localnode"</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">26656-26657:26656-26657"</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">ID=0</span>
      <span class="pi">-</span> <span class="s">LOG=$${LOG:-cometbft.log}</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./build:/cometbft:Z</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">node --proxy_app=tcp://abci0:26658</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="na">localnet</span><span class="pi">:</span>
        <span class="na">ipv4_address</span><span class="pi">:</span> <span class="s">192.167.10.2</span>
</code></pre></div></div>

<p>Similarly do for node1, node2 and node3 then <a href="https://github.com/cometbft/cometbft/blob/v0.34.x/docs/networks/docker-compose.md#run-a-testnet">run testnet</a></p>

<h2 id="logging">Logging</h2>

<p>Log is saved under the attached volume, in the <code class="language-plaintext highlighter-rouge">cometbft.log</code> file. If the
<code class="language-plaintext highlighter-rouge">LOG</code> environment variable is set to <code class="language-plaintext highlighter-rouge">stdout</code> at start, the log is not saved,
but printed on the screen.</p>

<h2 id="special-binaries">Special binaries</h2>

<p>If you have multiple binaries with different names, you can specify which one
to run with the <code class="language-plaintext highlighter-rouge">BINARY</code> environment variable. The path of the binary is relative
to the attached volume.</p>
:ET