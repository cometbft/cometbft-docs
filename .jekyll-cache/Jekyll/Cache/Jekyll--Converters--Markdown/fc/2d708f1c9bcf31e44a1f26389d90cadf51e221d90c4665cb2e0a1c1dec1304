I"‚#<h1 id="metrics">Metrics</h1>

<p>Tendermint can report and serve the Prometheus metrics, which in their turn can
be consumed by Prometheus collector(s).</p>

<p>This functionality is disabled by default.</p>

<p>To enable the Prometheus metrics, set <code class="language-plaintext highlighter-rouge">instrumentation.prometheus=true</code> in your
config file. Metrics will be served under <code class="language-plaintext highlighter-rouge">/metrics</code> on 26660 port by default.
Listen address can be changed in the config file (see
<code class="language-plaintext highlighter-rouge">instrumentation.prometheus\_listen\_addr</code>).</p>

<h2 id="list-of-available-metrics">List of available metrics</h2>

<p>The following metrics are available:</p>

<table>
  <thead>
    <tr>
      <th><strong>Name</strong></th>
      <th><strong>Type</strong></th>
      <th><strong>Tags</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>abci_connection_method_timing_seconds</td>
      <td>Histogram</td>
      <td>method, type</td>
      <td>Timings for each of the ABCI methods</td>
    </tr>
    <tr>
      <td>blocksync_syncing</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Either 0 (not block syncing) or 1 (syncing)</td>
    </tr>
    <tr>
      <td>consensus_height</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Height of the chain</td>
    </tr>
    <tr>
      <td>consensus_validators</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Number of validators</td>
    </tr>
    <tr>
      <td>consensus_validators_power</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Total voting power of all validators</td>
    </tr>
    <tr>
      <td>consensus_validator_power</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Voting power of the node if in the validator set</td>
    </tr>
    <tr>
      <td>consensus_validator_last_signed_height</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Last height the node signed a block, if the node is a validator</td>
    </tr>
    <tr>
      <td>consensus_validator_missed_blocks</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Total amount of blocks missed for the node, if the node is a validator</td>
    </tr>
    <tr>
      <td>consensus_missing_validators</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Number of validators who did not sign</td>
    </tr>
    <tr>
      <td>consensus_missing_validators_power</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Total voting power of the missing validators</td>
    </tr>
    <tr>
      <td>consensus_byzantine_validators</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Number of validators who tried to double sign</td>
    </tr>
    <tr>
      <td>consensus_byzantine_validators_power</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Total voting power of the byzantine validators</td>
    </tr>
    <tr>
      <td>consensus_block_interval_seconds</td>
      <td>Histogram</td>
      <td>Â </td>
      <td>Time between this and last block (Block.Header.Time) in seconds</td>
    </tr>
    <tr>
      <td>consensus_rounds</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Number of rounds</td>
    </tr>
    <tr>
      <td>consensus_num_txs</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Number of transactions</td>
    </tr>
    <tr>
      <td>consensus_total_txs</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Total number of transactions committed</td>
    </tr>
    <tr>
      <td>consensus_block_parts</td>
      <td>Counter</td>
      <td>peer_id</td>
      <td>Number of blockparts transmitted by peer</td>
    </tr>
    <tr>
      <td>consensus_latest_block_height</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>/status sync_info number</td>
    </tr>
    <tr>
      <td>consensus_block_size_bytes</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Block size in bytes</td>
    </tr>
    <tr>
      <td>consensus_step_duration</td>
      <td>Histogram</td>
      <td>step</td>
      <td>Histogram of durations for each step in the consensus protocol</td>
    </tr>
    <tr>
      <td>consensus_round_duration</td>
      <td>Histogram</td>
      <td>Â </td>
      <td>Histogram of durations for all the rounds that have occurred since the process started</td>
    </tr>
    <tr>
      <td>consensus_block_gossip_parts_received</td>
      <td>Counter</td>
      <td>matches_current</td>
      <td>Number of block parts received by the node</td>
    </tr>
    <tr>
      <td>consensus_quorum_prevote_delay</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Interval in seconds between the proposal timestamp and the timestamp of the earliest prevote that achieved a quorum</td>
    </tr>
    <tr>
      <td>consensus_full_prevote_delay</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Interval in seconds between the proposal timestamp and the timestamp of the latest prevote in a round where all validators voted</td>
    </tr>
    <tr>
      <td>consensus_proposal_receive_count</td>
      <td>Counter</td>
      <td>status</td>
      <td>Total number of proposals received by the node since process start</td>
    </tr>
    <tr>
      <td>consensus_proposal_create_count</td>
      <td>Counter</td>
      <td>Â </td>
      <td>Total number of proposals created by the node since process start</td>
    </tr>
    <tr>
      <td>consensus_round_voting_power_percent</td>
      <td>Gauge</td>
      <td>vote_type</td>
      <td>A value between 0 and 1.0 representing the percentage of the total voting power per vote type received within a round</td>
    </tr>
    <tr>
      <td>consensus_late_votes</td>
      <td>Counter</td>
      <td>vote_type</td>
      <td>Number of votes received by the node since process start that correspond to earlier heights and rounds than this node is currently in.</td>
    </tr>
    <tr>
      <td>p2p_message_send_bytes_total</td>
      <td>Counter</td>
      <td>message_type</td>
      <td>Number of bytes sent to all peers per message type</td>
    </tr>
    <tr>
      <td>p2p_message_receive_bytes_total</td>
      <td>Counter</td>
      <td>message_type</td>
      <td>Number of bytes received from all peers per message type</td>
    </tr>
    <tr>
      <td>p2p_peers</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Number of peers nodeâ€™s connected to</td>
    </tr>
    <tr>
      <td>p2p_peer_receive_bytes_total</td>
      <td>Counter</td>
      <td>peer_id, chID</td>
      <td>Number of bytes per channel received from a given peer</td>
    </tr>
    <tr>
      <td>p2p_peer_send_bytes_total</td>
      <td>Counter</td>
      <td>peer_id, chID</td>
      <td>Number of bytes per channel sent to a given peer</td>
    </tr>
    <tr>
      <td>p2p_peer_pending_send_bytes</td>
      <td>Gauge</td>
      <td>peer_id</td>
      <td>Number of pending bytes to be sent to a given peer</td>
    </tr>
    <tr>
      <td>p2p_num_txs</td>
      <td>Gauge</td>
      <td>peer_id</td>
      <td>Number of transactions submitted by each peer_id</td>
    </tr>
    <tr>
      <td>p2p_pending_send_bytes</td>
      <td>Gauge</td>
      <td>peer_id</td>
      <td>Amount of data pending to be sent to peer</td>
    </tr>
    <tr>
      <td>mempool_size</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Number of uncommitted transactions</td>
    </tr>
    <tr>
      <td>mempool_tx_size_bytes</td>
      <td>Histogram</td>
      <td>Â </td>
      <td>Transaction sizes in bytes</td>
    </tr>
    <tr>
      <td>mempool_failed_txs</td>
      <td>Counter</td>
      <td>Â </td>
      <td>Number of failed transactions</td>
    </tr>
    <tr>
      <td>mempool_recheck_times</td>
      <td>Counter</td>
      <td>Â </td>
      <td>Number of transactions rechecked in the mempool</td>
    </tr>
    <tr>
      <td>state_block_processing_time</td>
      <td>Histogram</td>
      <td>Â </td>
      <td>Time between BeginBlock and EndBlock in ms</td>
    </tr>
    <tr>
      <td>state_consensus_param_updates</td>
      <td>Counter</td>
      <td>Â </td>
      <td>Number of consensus parameter updates returned by the application since process start</td>
    </tr>
    <tr>
      <td>state_validator_set_updates</td>
      <td>Counter</td>
      <td>Â </td>
      <td>Number of validator set updates returned by the application since process start</td>
    </tr>
    <tr>
      <td>statesync_syncing</td>
      <td>Gauge</td>
      <td>Â </td>
      <td>Either 0 (not state syncing) or 1 (syncing)</td>
    </tr>
  </tbody>
</table>

<h2 id="useful-queries">Useful queries</h2>

<p>Percentage of missing + byzantine validators:</p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code>((consensus<span class="se">\_</span>byzantine<span class="se">\_</span>validators<span class="se">\_</span>power + consensus<span class="se">\_</span>missing<span class="se">\_</span>validators<span class="se">\_</span>power) / consensus<span class="se">\_</span>validators<span class="se">\_</span>power) <span class="err">*</span> 100
</code></pre></div></div>
:ET